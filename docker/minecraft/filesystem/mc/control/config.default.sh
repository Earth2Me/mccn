#!/bin/bash
# Default configuration settings.  Use this as a reference when configuring the
# application.

# Basic config {{{1
#      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#      !! WARNING: DO NOT EDIT THIS FILE.  This is just a reference.  Edit !!
#      !! config.local.sh instead.                                         !!
#      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

config=(
	# Changing this will break updates/upgrades.  Keep this as it is.
	[jar]='server.jar'

	# Path to a specific java binary.  Recommended to use update-alternatives
	# instead of changing this.  $PATH will be used, so there's no need for a
	# full path.
	[java]=java

	# Memory available for the JVM heap.  You can use $memory_kb and $memory_mb
	# to get the total available memory for the system, but keep in mind that
	# containers share the same memory pool.  $default_{min,max}_heap are
	# considered sane values for typical servers, with a 2 GiB memory cap.  If
	# you need more than that, either you have hundreds of players, or you're
	# doing something wrong.
	[java_min_heap]="$default_min_heap"
	[java_max_heap]="$default_max_heap"


	# Since rdiff-backup provides an incremental backup system, if you change
	# backup interval, each individual backup will actually be larger.  You
	# won't save much space by increasing the delay.  However, you should ensure
	# that the backup_path volume (typically /mc/backup) maps to a traditional
	# HDD on the host, not an SSD.
	#
	# Lower intervals will be more streamlined: saves won't take as long.  Set
	# backup_wait to the maximum duration of a save-all.
	[backup_interval]=15m
	[backup_path]="${dirs[backup]}"
	[backup_wait]=1m


	# You shouldn't need to mess with this stuff. {{{
	#
	#

	# If the server doesn't shut down without this amount of time, kill it with
	# SIGKILL.
	[forcekill_timeout]='30s'

	# Used to manage the server processes.
	[pid_file]="${dirs[tmp]}/server.pid"

	#
	#
	# }}}
)


# Complex configuration {{{1
#     Some configuration settings need to be derived from others, and may be
#     complex types that cannot be values in an associative array.

# Use this format to add additional java arguments.  Note the += operator.
# Don't add -Xms or -Xmx!  Those are added automatically.
config_java_args+=(
)

# These get passed to the JAR (CraftBukkit, Spigot, etc.).
config_server_args+=(
)

# These files will be parsed for environment variables.  This allows you to
# use Docker's environment variables to configure settings such as MySQL server
# information.  Files are relative to the server volume by default.  Variables
# take the form ${SOMETHING}, where SOMETHING is a variable name.  Put your
# template with variables in a file with a .var.yml file extension.  The
# .var.yml file will be used to create a .yml file.  Leave out the .var part in
# the array.  Works with file extensions other than .yml, too.
config_var_files+=(
	# Example:
	#bukkit.yml    # Put your data in bukkit.var.yml
)
# These are the actual variables that are exposed to var files.
config_var_file_vars+=(
	# Example:
	#MYSQL_PORT_3306_TCP_ADDR
	#MYSQL_PORT_3306_TCP_PORT
)